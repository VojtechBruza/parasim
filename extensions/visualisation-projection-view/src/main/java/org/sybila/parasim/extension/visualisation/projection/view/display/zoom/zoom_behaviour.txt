Situation:
I want to observe a graph with two dimensions (horizontal and vertical).
There is a graph window (which is wholly covered by graph), whose part I see through a viewport.
When graph window is smaller than viewport, a padding may be introduced.
    a) Padding in one dimension -- may help conserve aspect ratio of the graph window
    b) Padding in both dimensions -- this is nonsense as it may not be necessary to preserve the aspect ratio and it does not provide additional inofmation.

Possible actions:
-> zoom in/out graph along one dimension
-> zoom in/out graph along both dimensions (equally)
-> change size of viewport
-> zoom in to a rectangle


In the beginning, when the graph is first displayed, graph window is of equal size to the viewport.

a) zoom in along one dimension => graph window increases one dimension
b) zoom out along one dimension => graph window decreases one dimension
    -> when in that dimension it would be smaller than viewport
        i) there is paddding in the other dimension (i.e. it is smaller than the viewport) => stop there
        ii) padding is added to this dimension
c) zoom in along both dimensions => graph window increases by a factor in both dimensions (aspect ratio conserved)
d) zoom out in both dimensions => graph window decreases by a factor in both dimensions
    -> when the graph window is smaller than viewport
        a) in one dimension => add padding
        b) in both dimensions => stop right there
-> when zooming in and out, the viewport should probably stay centered on the same point (not left corner)
e) resize viewport => graph window and position do not change
    -> when viewport is larger than graph window, increase graph window while conserving aspect ratio (so that there is padding only on one side)
f) zoom in to a rectangle -- probably easy -> may control whether there is padding from sides.

State of the system is defined by:
-> size of graph window
-> position of viewport

NOTE: there may be more conservative behaviour allowing more padding