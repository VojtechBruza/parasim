# ODE Numeric Simulation Verifier File format
# ===========================================
# Mandatory fields:
#
# Order of appearance of fields: VARS, BOUNDS, INIT, (MIN_DIST || MAX_DIST).
# Fields EQ, TIME_LIMIT and DIV may follow in arbitrary order after VARS.
# Field identifiers are case-sensitive.
#
# VARS: List of all variable names separated by commas, names must be unique,       
#       each [varname] may only contain (a-zA-Z0-9_), names are case-sensitive,
#       "Time" is a reserved name for the time variable dimension.
#       If two variables with names X and dX exist it will not be possible to
#       ask for the derivative of X in model property definitions because of
#       ambiguity of such expressions.
#       At least one variable must be defined.
#        
# EQ:   Differential equation for single variable, must follow this grammar:
#       EQ: d[varname] = S;
#       S = S+S | N | N*V
#       V = [varname] | V*V
#       N = [number] | (-[number])       
#
# BOUNDS: [varname]: [number_min], [number_max];
#       Global minimum and maximum values of a variable,
#       any positive or negative floating point numbers that hold
#       [number_min] < [number_max],
#       simulation stops when any of these values are reached.
#
# TIME_LIMIT: [number];
#       Global time limit in seconds, each simulation ends when it's 
#       trajectory reaches this value on the time dimension.
#       Any positive floating point number. 
#
# INIT: [varname]: [number1], [number2];
#       Initial conditions interval on variable dimension [varname],
#       any positive or negative floating point numbers that hold
#       [number_min] <= [number1] < [number2] <= [number_max]
#
# Optional fields:
#
# DIV:  [varname]: [number];
#       Division of initial conditions interval on variable [varname],
#       any positive integer, if not present defaults to 2.
#
# MAX_TIME_STEP: [number];
#       Largest time step between two simulated points of one trajectory,
#       any positive floating point number, if not present defaults to 0.1.
#
# MAX_DIST: [varname]: [float];
#       Distance at which trajectories starting in neighbouring points must
#       stay on dimension [varname] during distance checking.
#       Any positive floating point number,
#       if not present defaults to 2*abs(INIT[number2] - INIT[number1]). 
#
# MIN_DIST: [varname]: [float];
#       Distance on dimension [varname] at which simulated trajectories
#       will be considered identical, used for precision of numerical
#       simulation as well as for cycle detection and simulation merging.
#       Any positive floating point number,
#       if not present defaults to 1/2000 of MAX_DIST[varname].
#       MIN_DIST[varname] < MAX_DIST[varname] must hold.
#         
# All lines begining with # are taken as comments and ignored.
# All whitespace characters ( \t\n\r\f) are ignored.

# Byramov oscilation model with 3 variables
 
VARS: X, Y, Z;

EQ: dX = 0.0005 + (-250.0)*X*Y;
EQ: dY = 0.0001 + (-0.1)*Y + (-250.0)*X*Y + 300.0*Y*Z;
EQ: dZ = 250.0*X*Y + (-300.0)*Y*Z;

BOUNDS: X: 0.0, 0.01;
BOUNDS: Y: 0.0, 0.01;
BOUNDS: Z: 0.0, 0.01;

TIME_LIMIT: 960.0;
MAX_TIME_STEP: 0.1;

INIT: X: 0.0015, 0.0040;
INIT: Y: 0.00095, 0.00405;
INIT: Z: 0.00038, 0.00482;

DIV: X: 3;
DIV: Y: 3;
DIV: Z: 4;